<div class="container-fluid">

  <h1>{{this.model.slotPickerName}}</h1>

  <h3>Default</h3>
  <div class="mb8">
    <SlotsPicker
      @appointmentSlots={{this.model.showableSlots}}
      @selected={{this.model.selected}}
      @noSlotLabel="Not available"
      @select={{action (mut this.model.selected)}}
      as |baseProps onSelectSlot|
    >
      {{component
        this.model.slotPickerName
        baseProps=baseProps
        onSelectSlot=onSelectSlot
      }}
      <SlotsPicker::SelectionSingle @baseProps={{baseProps}} />
    </SlotsPicker>
  </div>

  <hr />
  <h3>Overlay (appears after
    {{this.delay}}
    ms, change with queryParam ?delay=10000)</h3>
  <div class="mb8">
    <ClockReloader
      @delay={{this.delay}}
      @onrefresh={{fn @onResetSlots this.delay}}
      as |isExpired refresh|
    >
      <SlotsPicker
        @appointmentSlots={{this.model.showableSlots}}
        @selected={{this.model.selected}}
        @noSlotLabel="Not available"
        @select={{action (mut this.model.selected)}}
        as |baseProps onSelectSlot|
      >
        {{component
          this.model.slotPickerName
          baseProps=baseProps
          onSelectSlot=onSelectSlot
        }}
        {{#if isExpired}}
          <ClockReloader::Overlay
            @title="<h3>Hello World</h3>"
            @refresh={{action refresh}}
          />
        {{/if}}
        <SlotsPicker::SelectionSingle @baseProps={{baseProps}} />
      </SlotsPicker>
    </ClockReloader>
  </div>
  <hr />
  <h3>Loading state ({{this.delay}}
    ms, change with queryParam ?delay=10000)</h3>
  <hr />
  <h4>Default loader</h4>
  <div class="mb8">
    <SlotsPicker
      @appointmentSlots={{this.model.asyncSlots}}
      @selected={{this.model.selected}}
      @noSlotLabel="Not available"
      @select={{action (mut this.model.selected)}}
      as |baseProps onSelectSlot|
    >
      {{component
        this.model.slotPickerName
        baseProps=baseProps
        onSelectSlot=onSelectSlot
      }}
      <SlotsPicker::SelectionSingle @baseProps={{baseProps}} />
    </SlotsPicker>
  </div>
  <hr />
  <h4>Custom loading template</h4>
  <div class="mb8">
    <SlotsPicker
      @appointmentSlots={{this.model.asyncSlots}}
      @selected={{this.model.selected}}
      @noSlotLabel="Not available"
      @select={{action (mut this.model.selected)}}
      as |baseProps onSelectSlot|
    >
      {{#if baseProps.slotsAreLoading}}
        <SlotsPicker::SlotsLoader
          @title="Finding the next available appointments in your area.."
        />
      {{else}}
        {{component
          this.model.slotPickerName
          baseProps=baseProps
          onSelectSlot=onSelectSlot
        }}
      {{/if}}
      <SlotsPicker::SelectionSingle @baseProps={{baseProps}} />
    </SlotsPicker>
  </div>
  <hr />
  <h3>Filter slots</h3>
  <div class="mb8">
    <SlotsFilter
      @appointmentSlots={{this.model.showableSlots}}
      @onFilter={{action (mut this.model.selected null)}}
      as |filteredAppointmentSlots changeFilter selectedFilter|
    >
      <SlotsPicker
        @appointmentSlots={{filteredAppointmentSlots}}
        @selected={{this.model.selected}}
        @noSlotLabel="Not available"
        @selectedFilter={{selectedFilter}}
        @select={{action (mut this.model.selected)}}
        as |baseProps onSelectSlot|
      >
        <SlotsFilter::Ui
          @timeSlots={{baseProps.rows}}
          @changeFilter={{changeFilter}}
          @selectedFilter={{selectedFilter}}
        />
        {{component
          this.model.slotPickerName
          baseProps=baseProps
          onSelectSlot=onSelectSlot
        }}
        <SlotsPicker::SelectionSingle @baseProps={{baseProps}} />
      </SlotsPicker>
    </SlotsFilter>
  </div>

  {{#if (not (eq this.model.slotPickerName "slots-picker/pickadate"))}}
    <hr />
    <h3>Multiple slots</h3>
    <div class="mb8">
      <SlotsPicker
        @appointmentSlots={{this.model.showableSlots}}
        @selected={{this.selectedSlots}}
        @canSelectMultipleSlots="true"
        @noSlotLabel="Not available"
        @select={{action "appendSlot"}}
        @deselect={{action "removeSlot"}}
        as |baseProps onSelectSlot onDeselectSlot|
      >
        {{component
          this.model.slotPickerName
          baseProps=baseProps
          onSelectSlot=onSelectSlot
          onDeselectSlot=onDeselectSlot
        }}
        <SlotsPicker::SelectionMulti
          @baseProps={{baseProps}}
          @onDeselectSlot={{onDeselectSlot}}
        />
      </SlotsPicker>
    </div>
  {{/if}}
</div>
